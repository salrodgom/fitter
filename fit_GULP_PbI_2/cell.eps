%!PS-Adobe-2.0 EPSF-2.0
%%Title: cell.eps
%%Creator: gnuplot 5.0 patchlevel rc2
%%CreationDate: Wed May 16 08:09:54 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Apr 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Base ISO8859-1 character encoding plus support macros for UTF-8 encoding
% via the glyphshow operator
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/Gshow { dup type /stringtype eq { show } { glyphshow } ifelse } def

/Gsall { {Gshow} forall } def
/Gwidth {
	dup currentpoint pop exch
	gsave 6 array currentmatrix nulldevice setmatrix Gsall currentpoint pop grestore sub
	} def
/GLshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GRshow {currentpoint stroke M dup Gwidth vshift R
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GCshow {currentpoint stroke M dup Gwidth 2 div vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (cell.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel rc2)
  /Author (salvador)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed May 16 08:09:54 2018)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1320 768 M
63 0 V
5384 0 R
-63 0 V
stroke
1176 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1320 1337 M
63 0 V
5384 0 R
-63 0 V
stroke
1176 1337 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.02)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1320 1906 M
63 0 V
5384 0 R
-63 0 V
stroke
1176 1906 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.04)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1320 2475 M
63 0 V
5384 0 R
-63 0 V
stroke
1176 2475 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.06)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1320 3044 M
63 0 V
5384 0 R
-63 0 V
stroke
1176 3044 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.08)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1320 3613 M
63 0 V
5384 0 R
-63 0 V
stroke
1176 3613 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.1)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1320 4182 M
63 0 V
5384 0 R
-63 0 V
stroke
1176 4182 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.12)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1320 4751 M
63 0 V
5384 0 R
-63 0 V
stroke
1176 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.14)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1320 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1320 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2098 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2098 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 5)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2876 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2876 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3654 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3654 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 15)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4433 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4433 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5211 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5211 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 25)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5989 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5989 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 30)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6767 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6767 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 35)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1320 4751 N
0 -3983 V
5447 0 V
0 3983 V
-5447 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
192 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Energy/Atom [eV])]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4043 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (Configuration / -)]
] -80.0 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C LCb setrgbcolor
5696 4568 M
[ [(Helvetica) 240.0 0.0 true true 0 (MYP potential GULP new)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C 1320 914 Circle
1476 887 Circle
1631 950 Circle
1787 919 Circle
1943 820 Circle
2098 1038 Circle
2254 768 Circle
2409 1060 Circle
2565 792 Circle
2721 1042 Circle
2876 1006 Circle
3032 1331 Circle
3188 966 Circle
3343 1200 Circle
3499 1649 Circle
3654 1149 Circle
3810 1793 Circle
3966 1068 Circle
4121 1100 Circle
4277 1201 Circle
4433 1178 Circle
4588 1142 Circle
4744 1122 Circle
4899 2053 Circle
5055 1325 Circle
5211 1280 Circle
5366 1200 Circle
5522 1386 Circle
5678 1365 Circle
5833 1427 Circle
5989 2182 Circle
6144 3688 Circle
6159 4568 Circle
% End plot #1
% Begin plot #2
1.000 UL
LTb
1.00 0.00 0.00 C 1320 914 M
49 -16 V
48 -11 V
49 -1 V
49 12 V
49 22 V
48 23 V
49 15 V
49 2 V
49 -19 V
48 -44 V
49 -56 V
49 -34 V
49 25 V
48 89 V
49 91 V
49 25 V
48 -80 V
49 -120 V
49 -69 V
49 53 V
48 126 V
49 101 V
49 -12 V
49 -107 V
48 -110 V
49 -21 V
49 81 V
49 110 V
48 60 V
49 -18 V
49 -37 V
48 17 V
49 108 V
49 136 V
49 75 V
48 -54 V
49 -140 V
49 -139 V
49 -59 V
48 41 V
49 127 V
49 196 V
48 211 V
49 135 V
49 -29 V
49 -198 V
48 -211 V
49 -55 V
49 189 V
49 278 V
48 168 V
49 -97 V
49 -275 V
49 -288 V
48 -148 V
49 1 V
49 76 V
48 76 V
49 45 V
49 19 V
49 1 V
48 -10 V
49 -10 V
49 -1 V
49 9 V
48 -2 V
49 -39 V
49 -84 V
49 -57 V
48 67 V
49 267 V
49 372 V
48 288 V
49 26 V
49 -228 V
49 -311 V
48 -219 V
49 -54 V
49 34 V
49 34 V
48 -20 V
49 -43 V
49 -19 V
49 37 V
48 71 V
49 67 V
49 31 V
48 -5 V
49 -24 V
49 -26 V
49 -8 V
48 34 V
49 97 V
49 176 V
49 259 V
48 348 V
49 429 V
49 487 V
48 515 V
% End plot #2
% Begin plot #3
1.000 UP
stroke
LTb
0.00 1.00 0.00 C LCb setrgbcolor
5696 4328 M
[ [(Helvetica) 240.0 0.0 true true 0 (MYP potential GULP Mattonni)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
0.00 1.00 0.00 C 1320 804 Circle
1476 798 Circle
1631 817 Circle
1787 812 Circle
1943 782 Circle
2098 847 Circle
2254 768 Circle
2409 876 Circle
2565 846 Circle
2721 1086 Circle
2876 1035 Circle
3032 1110 Circle
3188 1183 Circle
3343 1429 Circle
3499 1573 Circle
3654 1473 Circle
3810 1983 Circle
3966 1473 Circle
4121 1433 Circle
4277 1505 Circle
4433 1627 Circle
4588 1379 Circle
4744 1436 Circle
4899 2390 Circle
5055 1751 Circle
5211 1630 Circle
5366 1632 Circle
5522 1816 Circle
5678 1782 Circle
5833 1865 Circle
5989 2704 Circle
6144 4245 Circle
6159 4328 Circle
% End plot #3
% Begin plot #4
1.000 UL
LTb
0.00 1.00 0.00 C 1320 804 M
49 -4 V
48 -2 V
49 0 V
49 4 V
49 6 V
48 6 V
49 6 V
49 2 V
49 -4 V
48 -12 V
49 -17 V
49 -11 V
49 8 V
48 26 V
49 28 V
49 7 V
48 -25 V
49 -36 V
48 -18 V
2 0 R
48 21 V
48 44 V
49 38 V
49 1 V
49 -25 V
48 -13 V
49 36 V
49 83 V
49 89 V
48 51 V
49 -4 V
49 -32 V
48 -23 V
49 9 V
49 31 V
49 32 V
48 21 V
49 16 V
49 27 V
49 51 V
48 75 V
49 87 V
49 89 V
48 74 V
49 36 V
49 -23 V
49 -71 V
48 -50 V
49 46 V
49 175 V
49 206 V
48 116 V
49 -68 V
49 -191 V
49 -204 V
48 -114 V
49 -18 V
49 30 V
48 31 V
49 18 V
49 18 V
49 37 V
48 54 V
49 44 V
49 7 V
49 -49 V
48 -87 V
49 -103 V
49 -91 V
49 -24 V
48 108 V
49 288 V
49 373 V
48 291 V
49 47 V
49 -192 V
49 -280 V
48 -215 V
49 -80 V
49 1 V
49 20 V
48 -3 V
49 -9 V
49 11 V
49 50 V
48 68 V
49 58 V
49 23 V
48 -9 V
49 -26 V
49 -27 V
49 -6 V
48 42 V
49 116 V
49 202 V
49 289 V
48 371 V
49 446 V
49 496 V
48 521 V
% End plot #4
% Begin plot #5
1.000 UP
stroke
LTb
0.00 0.00 0.00 C LCb setrgbcolor
5696 4088 M
[ [(Helvetica) 240.0 0.0 true true 0 (DFT Own)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C 1320 768 BoxF
1476 769 BoxF
1631 769 BoxF
1787 773 BoxF
1943 775 BoxF
2098 781 BoxF
2254 792 BoxF
2409 815 BoxF
2565 852 BoxF
2721 863 BoxF
2876 936 BoxF
3032 959 BoxF
3188 1087 BoxF
3343 1107 BoxF
3499 1161 BoxF
3654 1249 BoxF
3810 1335 BoxF
3966 1358 BoxF
4121 1398 BoxF
4277 1400 BoxF
4433 1420 BoxF
4588 1458 BoxF
4744 1463 BoxF
4899 1506 BoxF
5055 1524 BoxF
5211 1537 BoxF
5366 1616 BoxF
5522 1784 BoxF
5678 1892 BoxF
5833 1999 BoxF
5989 2191 BoxF
6144 3152 BoxF
6159 4088 BoxF
% End plot #5
% Begin plot #6
1.000 UL
LTb
0.00 0.00 0.00 C 1320 768 M
49 0 V
48 1 V
49 0 V
49 0 V
49 0 V
48 0 V
49 1 V
49 1 V
49 1 V
48 1 V
49 0 V
49 1 V
49 1 V
48 1 V
49 2 V
49 3 V
48 3 V
49 3 V
49 4 V
49 5 V
48 6 V
49 9 V
49 12 V
49 14 V
48 11 V
49 5 V
49 0 V
49 2 V
48 12 V
49 24 V
49 27 V
48 18 V
49 5 V
49 2 V
49 12 V
48 34 V
49 46 V
49 42 V
49 23 V
48 6 V
49 0 V
49 4 V
48 14 V
49 20 V
49 24 V
49 26 V
48 28 V
49 30 V
49 32 V
49 28 V
48 22 V
49 12 V
49 5 V
49 5 V
48 10 V
49 15 V
49 13 V
48 7 V
49 1 V
49 -1 V
49 -1 V
48 4 V
49 7 V
49 11 V
49 13 V
48 13 V
49 9 V
49 3 V
49 -1 V
48 2 V
49 9 V
49 15 V
48 15 V
49 12 V
49 7 V
49 3 V
48 2 V
49 2 V
49 5 V
49 8 V
48 15 V
49 24 V
49 36 V
49 50 V
48 56 V
49 53 V
49 42 V
48 32 V
49 31 V
49 35 V
49 39 V
48 33 V
49 20 V
49 19 V
49 60 V
48 143 V
49 246 V
49 321 V
48 358 V
% End plot #6
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1320 4751 N
0 -3983 V
5447 0 V
0 3983 V
-5447 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
